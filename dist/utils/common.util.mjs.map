{"version":3,"file":"common.util.mjs","sources":["../../src/lib/utils/common.util.js"],"sourcesContent":["/*\nCopyright 2022 Iguazio Systems Ltd.\nLicensed under the Apache License, Version 2.0 (the \"License\") with\nan addition restriction as set forth herein. You may not use this\nfile except in compliance with the License. You may obtain a copy of\nthe License at http://www.apache.org/licenses/LICENSE-2.0.\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing\npermissions and limitations under the License.\nIn addition, you may not use the software for any purposes that are\nillegal under applicable law, and the grant of the foregoing license\nunder the Apache 2.0 license is conditioned upon your compliance with\nsuch restriction.\n*/\nimport { create } from 'react-modal-promise'\nimport { differenceWith, isEqual, get, omit, isEmpty } from 'lodash'\nimport ConfirmDialog from '../components/ConfirmDialog/ConfirmDialog'\nimport { DANGER_BUTTON, PRIMARY_BUTTON, TERTIARY_BUTTON } from '../constants'\n\nexport const openPopUp = (element, props) => {\n  return create(element)(props)\n}\n\nexport const openConfirmPopUp = (message, confirmHandler) => {\n  return openPopUp(ConfirmDialog, {\n    cancelButton: {\n      label: 'Cancel',\n      variant: TERTIARY_BUTTON\n    },\n    confirmButton: {\n      label: 'OK',\n      variant: PRIMARY_BUTTON,\n      handler: confirmHandler\n    },\n    header: 'Are you sure?',\n    message\n  })\n}\n\nexport const openDeleteConfirmPopUp = (header, message, confirmHandler) => {\n  return openPopUp(ConfirmDialog, {\n    cancelButton: {\n      label: 'Cancel',\n      variant: TERTIARY_BUTTON\n    },\n    confirmButton: {\n      label: 'Delete',\n      variant: DANGER_BUTTON,\n      handler: confirmHandler\n    },\n    header,\n    message\n  })\n}\n\nexport const isEveryObjectValueEmpty = obj =>\n  Object.values(obj).every(item => !item || item.length === 0)\n\n// Checks, whether two arrays of objects are equal, can omit some keys if their comparison is not necessary\nexport const areArraysEqual = (firstArray, secondArray, omitBy = []) => {\n  if (firstArray.length !== secondArray.length) return false\n\n  return isEmpty(\n    differenceWith(firstArray, secondArray, (a, b) => {\n      return isEqual(omit(a, omitBy), omit(b, omitBy))\n    })\n  )\n}\n\n/**\n * Get error information from the error object.\n *\n * @param {Error} error - The error object.\n * @returns {string} - The detailed error information.\n */\nexport const getErrorDetail = error => {\n  const errorDetail = get(error, 'response.data.detail', null)\n\n  if (typeof errorDetail === 'string') {\n    return errorDetail\n  } else {\n    return get(errorDetail, 'reason', '')\n  }\n}\n\n/**\n * Get the error message from the error object or a default error message.\n *\n * @param {Error} error - The error object.\n * @param {string} defaultError - The default error message.\n * @returns {string} - The error message.\n */\nexport const getErrorMsg = (error, defaultError) => {\n  const errorDetail = getErrorDetail(error)\n  const errorMsg = errorDetail || error.message\n\n  if (\n    (!errorMsg ||\n      errorMsg === 'Not Found' ||\n      errorMsg.startsWith('Request failed with status code')) &&\n    defaultError\n  ) {\n    return defaultError\n  } else {\n    return errorMsg || ''\n  }\n}\n\n/**\n * Retrieves the appropriate transition end event name based on the browser.\n *\n * @returns {string} The transition end event name.\n */\nexport const getTransitionEndEventName = () => {\n  const transitions = {\n    transition: 'transitionend',\n    OTransition: 'oTransitionEnd',\n    MozTransition: 'transitionend',\n    WebkitTransition: 'webkitTransitionEnd'\n  }\n\n  let bodyStyle = document.body.style\n\n  for (let transition in transitions) {\n    if (bodyStyle[transition] !== undefined) {\n      return transitions[transition]\n    }\n  }\n}\n\nexport const getScssVariableValue = variableName => {\n  return getComputedStyle(document.documentElement).getPropertyValue(variableName).trim()\n}\n"],"names":["openPopUp","element","props","create","openConfirmPopUp","message","confirmHandler","ConfirmDialog","TERTIARY_BUTTON","PRIMARY_BUTTON","openDeleteConfirmPopUp","header","DANGER_BUTTON","isEveryObjectValueEmpty","obj","item","areArraysEqual","firstArray","secondArray","omitBy","isEmpty","differenceWith","a","b","isEqual","omit","getErrorDetail","error","errorDetail","get","getErrorMsg","defaultError","errorMsg","getTransitionEndEventName","transitions","bodyStyle","transition","getScssVariableValue","variableName"],"mappings":";;;;AAqBY,MAACA,IAAY,CAACC,GAASC,MAC1BC,EAAOF,CAAO,EAAEC,CAAK,GAGjBE,IAAmB,CAACC,GAASC,MACjCN,EAAUO,GAAe;AAAA,EAC9B,cAAc;AAAA,IACZ,OAAO;AAAA,IACP,SAASC;AAAA,EACV;AAAA,EACD,eAAe;AAAA,IACb,OAAO;AAAA,IACP,SAASC;AAAA,IACT,SAASH;AAAA,EACV;AAAA,EACD,QAAQ;AAAA,EACR,SAAAD;AACD,CAAA,GAGUK,IAAyB,CAACC,GAAQN,GAASC,MAC/CN,EAAUO,GAAe;AAAA,EAC9B,cAAc;AAAA,IACZ,OAAO;AAAA,IACP,SAASC;AAAA,EACV;AAAA,EACD,eAAe;AAAA,IACb,OAAO;AAAA,IACP,SAASI;AAAA,IACT,SAASN;AAAA,EACV;AAAA,EACD,QAAAK;AAAA,EACA,SAAAN;AACD,CAAA,GAGUQ,IAA0B,CAAAC,MACrC,OAAO,OAAOA,CAAG,EAAE,MAAM,CAAAC,MAAQ,CAACA,KAAQA,EAAK,WAAW,CAAC,GAGhDC,IAAiB,CAACC,GAAYC,GAAaC,IAAS,CAAA,MAC3DF,EAAW,WAAWC,EAAY,SAAe,KAE9CE;AAAA,EACLC,EAAeJ,GAAYC,GAAa,CAACI,GAAGC,MACnCC,EAAQC,EAAKH,GAAGH,CAAM,GAAGM,EAAKF,GAAGJ,CAAM,CAAC,CAChD;AACL,GASaO,IAAiB,CAAAC,MAAS;AACrC,QAAMC,IAAcC,EAAIF,GAAO,wBAAwB,IAAI;AAE3D,SAAI,OAAOC,KAAgB,WAClBA,IAEAC,EAAID,GAAa,UAAU,EAAE;AAExC,GASaE,IAAc,CAACH,GAAOI,MAAiB;AAElD,QAAMC,IADcN,EAAeC,CAAK,KACRA,EAAM;AAEtC,UACG,CAACK,KACAA,MAAa,eACbA,EAAS,WAAW,iCAAiC,MACvDD,IAEOA,IAEAC,KAAY;AAEvB,GAOaC,IAA4B,MAAM;AAC7C,QAAMC,IAAc;AAAA,IAClB,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,eAAe;AAAA,IACf,kBAAkB;AAAA,EACtB;AAEE,MAAIC,IAAY,SAAS,KAAK;AAE9B,WAASC,KAAcF;AACrB,QAAIC,EAAUC,CAAU,MAAM;AAC5B,aAAOF,EAAYE,CAAU;AAGnC,GAEaC,IAAuB,CAAAC,MAC3B,iBAAiB,SAAS,eAAe,EAAE,iBAAiBA,CAAY,EAAE,KAAI;"}