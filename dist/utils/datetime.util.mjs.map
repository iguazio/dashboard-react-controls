{"version":3,"file":"datetime.util.mjs","sources":["../../src/lib/utils/datetime.util.js"],"sourcesContent":["/*\nCopyright 2019 Iguazio Systems Ltd.\n\nLicensed under the Apache License, Version 2.0 (the \"License\") with\nan addition restriction as set forth herein. You may not use this\nfile except in compliance with the License. You may obtain a copy of\nthe License at http://www.apache.org/licenses/LICENSE-2.0.\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing\npermissions and limitations under the License.\n\nIn addition, you may not use the software for any purposes that are\nillegal under applicable law, and the grant of the foregoing license\nunder the Apache 2.0 license is conditioned upon your compliance with\nsuch restriction.\n*/\nimport moment from 'moment'\n\nexport const formatDatetime = (datetime, invalidDateMessage) => {\n  if (!datetime) {\n    return invalidDateMessage\n  }\n\n  const date = new Date(datetime)\n\n  return typeof date !== 'object' || !(date instanceof Date) || isNaN(date)\n    ? invalidDateMessage\n    : new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      }).format(date)\n}\n\nexport const getFormatTime = time => {\n  const [hour, minute] = time.split(':')\n  if (!minute) {\n    return {\n      hour: '0',\n      minute: '0'\n    }\n  }\n  return {\n    hour: hour.replace(/_/g, '0'),\n    minute: minute.replace(/_/g, '0')\n  }\n}\n\nexport const getTimeElapsedByDate = creationDate => {\n  moment.updateLocale('en', {\n    relativeTime: {\n      future: 'in %s',\n      past: '%s ago',\n      s: 'a few seconds',\n      ss: '%d seconds',\n      m: 'a minute',\n      mm: '%d minutes',\n      h: 'an hour',\n      hh: '%d hours',\n      d: 'a day',\n      dd: '%d days',\n      w: 'a week',\n      ww: '%d weeks',\n      M: 'a month',\n      MM: '%d months',\n      y: 'a year',\n      yy: '%d years'\n    }\n  })\n\n  const time = moment.utc(creationDate)\n\n  return time.fromNow()\n}\n\nexport const getDateAndTimeByFormat = (date, dateFormat) => {\n  return moment(date).format(dateFormat)\n}\n\nexport const sortListByDate = (list = [], field, isAscending = true) => {\n  return [...list].sort((prevElem, nextElem) => {\n    const prev = Date.parse(prevElem[field])\n    const next = Date.parse(nextElem[field])\n\n    return isAscending ? prev - next : next - prev\n  })\n}\n"],"names":["formatDatetime","datetime","invalidDateMessage","date","getFormatTime","time","hour","minute","getTimeElapsedByDate","creationDate","moment","getDateAndTimeByFormat","dateFormat","sortListByDate","list","field","isAscending","prevElem","nextElem","prev","next"],"mappings":";AAqBY,MAACA,IAAiB,CAACC,GAAUC,MAAuB;AAC9D,MAAI,CAACD;AACH,WAAOC;AAGT,QAAMC,IAAO,IAAI,KAAKF,CAAQ;AAE9B,SAAO,OAAOE,KAAS,YAAY,EAAEA,aAAgB,SAAS,MAAMA,CAAI,IACpED,IACA,IAAI,KAAK,eAAe,SAAS;AAAA,IAC/B,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,EAChB,CAAO,EAAE,OAAOC,CAAI;AACpB,GAEaC,IAAgB,CAAAC,MAAQ;AACnC,QAAM,CAACC,GAAMC,CAAM,IAAIF,EAAK,MAAM,GAAG;AACrC,SAAKE,IAME;AAAA,IACL,MAAMD,EAAK,QAAQ,MAAM,GAAG;AAAA,IAC5B,QAAQC,EAAO,QAAQ,MAAM,GAAG;AAAA,EACpC,IARW;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,EACd;AAMA,GAEaC,IAAuB,CAAAC,OAClCC,EAAO,aAAa,MAAM;AAAA,EACxB,cAAc;AAAA,IACZ,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,IAAI;AAAA,EACV;AACG,CAAA,GAEYA,EAAO,IAAID,CAAY,EAExB,QAAO,IAGRE,IAAyB,CAACR,GAAMS,MACpCF,EAAOP,CAAI,EAAE,OAAOS,CAAU,GAG1BC,IAAiB,CAACC,IAAO,CAAA,GAAIC,GAAOC,IAAc,OACtD,CAAC,GAAGF,CAAI,EAAE,KAAK,CAACG,GAAUC,MAAa;AAC5C,QAAMC,IAAO,KAAK,MAAMF,EAASF,CAAK,CAAC,GACjCK,IAAO,KAAK,MAAMF,EAASH,CAAK,CAAC;AAEvC,SAAOC,IAAcG,IAAOC,IAAOA,IAAOD;AAC3C,CAAA;"}