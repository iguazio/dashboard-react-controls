{"version":3,"file":"FormCombobox.mjs","sources":["../../../src/lib/components/FormCombobox/FormCombobox.jsx"],"sourcesContent":["/*\nCopyright 2022 Iguazio Systems Ltd.\nLicensed under the Apache License, Version 2.0 (the \"License\") with\nan addition restriction as set forth herein. You may not use this\nfile except in compliance with the License. You may obtain a copy of\nthe License at http://www.apache.org/licenses/LICENSE-2.0.\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing\npermissions and limitations under the License.\nIn addition, you may not use the software for any purposes that are\nillegal under applicable law, and the grant of the foregoing license\nunder the Apache 2.0 license is conditioned upon your compliance with\nsuch restriction.\n*/\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { Field, useField } from 'react-final-form'\nimport { isEmpty } from 'lodash'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nimport OptionsMenu from '../../elements/OptionsMenu/OptionsMenu'\nimport ValidationTemplate from '../../elements/ValidationTemplate/ValidationTemplate'\nimport PopUpDialog from '../PopUpDialog/PopUpDialog'\nimport TextTooltipTemplate from '../TooltipTemplate/TextTooltipTemplate'\nimport Tooltip from '../Tooltip/Tooltip'\n\nimport { checkPatternsValidity } from '../../utils/validation.util'\nimport { useDetectOutsideClick } from '../../hooks'\nimport { COMBOBOX_SELECT_OPTIONS, COMBOBOX_SUGGESTION_LIST } from '../../types'\n\nimport Arrow from '../../images/arrow.svg?react'\nimport SearchIcon from '../../images/search.svg?react'\nimport WarningIcon from '../../images/warning.svg?react'\nimport ExclamationMarkIcon from '../../images/exclamation-mark.svg?react'\n\nimport './formCombobox.scss'\n\nconst FormCombobox = ({\n  comboboxClassName = '',\n  density = 'normal',\n  disabled = false,\n  hideSearchInput = false,\n  inputDefaultValue = '',\n  inputPlaceholder = '',\n  invalidText = 'Invalid',\n  label = '',\n  maxSuggestedMatches = 1,\n  name,\n  onBlur = null,\n  onChange = null,\n  onFocus = null,\n  required = false,\n  rules = [],\n  selectDefaultValue = {\n    label: '',\n    id: '',\n    className: ''\n  },\n  selectOptions,\n  selectPlaceholder = '',\n  suggestionList = [],\n  validator = null,\n  withoutBorder = false\n}) => {\n  const { input, meta } = useField(name)\n  const [inputValue, setInputValue] = useState(inputDefaultValue)\n  const [selectValue, setSelectValue] = useState(selectDefaultValue)\n  const [dropdownStyle, setDropdownStyle] = useState({\n    left: '0px'\n  })\n  const [showSelectDropdown, setShowSelectDropdown] = useState(false)\n  const [showSuggestionList, setShowSuggestionList] = useState(false)\n  const [dropdownList, setDropdownList] = useState(suggestionList)\n  const [searchIsFocused, setSearchIsFocused] = useState(false)\n  const [isInvalid, setIsInvalid] = useState(false)\n  const [validationRules, setValidationRules] = useState(rules)\n  const [showValidationRules, setShowValidationRules] = useState(false)\n  const comboboxRef = useRef()\n  const selectRef = useRef()\n  const inputRef = useRef()\n  const suggestionListRef = useRef()\n  useDetectOutsideClick(comboboxRef, () => setShowValidationRules(false))\n\n  const labelClassNames = classnames('form-field__label', disabled && 'form-field__label-disabled')\n  const inputClassNames = classnames(\n    'form-field-combobox__input',\n    selectValue.id.length === 0 && 'form-field-combobox__input_hidden'\n  )\n\n  useEffect(() => {\n    setValidationRules(prevState =>\n      prevState.map(rule => ({\n        ...rule,\n        isValid:\n          !meta.error || !Array.isArray(meta.error)\n            ? true\n            : !meta.error.some(err => err.name === rule.name)\n      }))\n    )\n  }, [meta.error])\n\n  useEffect(() => {\n    if (!searchIsFocused) {\n      if (JSON.stringify(dropdownList) !== JSON.stringify(suggestionList)) {\n        setDropdownList(suggestionList)\n      }\n    }\n  }, [dropdownList, suggestionList, searchIsFocused])\n\n  useEffect(() => {\n    setIsInvalid(\n      meta.invalid && (meta.validating || meta.modified || (meta.submitFailed && meta.touched))\n    )\n  }, [meta.invalid, meta.modified, meta.submitFailed, meta.touched, meta.validating])\n\n  const handleOutsideClick = useCallback(\n    event => {\n      if (\n        comboboxRef.current &&\n        !comboboxRef.current.contains(event.target) &&\n        suggestionListRef.current &&\n        !suggestionListRef.current.contains(event.target)\n      ) {\n        setSearchIsFocused(false)\n        setShowSelectDropdown(false)\n        setShowSuggestionList(false)\n        input.onBlur(new Event('blur'))\n        onBlur && onBlur(input.value)\n      }\n    },\n    [input, onBlur]\n  )\n\n  const handleScroll = event => {\n    if (comboboxRef.current && comboboxRef.current.contains(event.target)) return\n\n    if (\n      !event.target.closest('.pop-up-dialog') &&\n      !event.target.classList.contains('form-field-combobox')\n    ) {\n      setShowValidationRules(false)\n      setShowSelectDropdown(false)\n      setShowSuggestionList(false)\n      inputRef.current.blur()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', handleOutsideClick)\n\n    return () => {\n      window.removeEventListener('click', handleOutsideClick)\n    }\n  }, [handleOutsideClick])\n\n  useEffect(() => {\n    if (showValidationRules || showSelectDropdown || showSuggestionList) {\n      window.addEventListener('scroll', handleScroll, true)\n    }\n    return () => {\n      window.removeEventListener('scroll', handleScroll, true)\n    }\n  }, [showSelectDropdown, showSuggestionList, showValidationRules])\n\n  const getValidationRules = () => {\n    return validationRules.map(({ isValid = false, label, name }) => {\n      return <ValidationTemplate valid={isValid} validationMessage={label} key={name} />\n    })\n  }\n\n  const handleInputChange = event => {\n    const target = event.target\n\n    setDropdownStyle({\n      left: `${target.selectionStart < 30 ? target.selectionStart : 30}ch`\n    })\n\n    if (searchIsFocused) {\n      setSearchIsFocused(false)\n    }\n\n    setInputValue(target.value)\n    input.onChange(`${selectValue.id}${target.value}`)\n    onChange && onChange(selectValue.id, target.value)\n\n    if (dropdownList.length > 0) {\n      setShowSuggestionList(true)\n    }\n  }\n\n  const handleSelectOptionClick = selectedOption => {\n    if (selectedOption.id !== selectValue.id) {\n      setSelectValue(selectedOption)\n      input.onChange(selectedOption.id)\n      setInputValue('')\n      onChange && onChange(selectedOption.id)\n      setShowSelectDropdown(false)\n      inputRef.current.disabled = false\n      inputRef.current.focus()\n    }\n  }\n\n  const handleSuggestionListOptionClick = option => {\n    const inputValueItems = inputValue.split('/')\n    const valueIndex = inputValueItems.length - 1\n    let formattedValue = option.customDelimiter\n      ? inputValueItems[valueIndex].replace(new RegExp(`${option.customDelimiter}.*`), '') +\n        option.id\n      : option.id\n\n    if (inputValueItems.length <= maxSuggestedMatches - 1) formattedValue += '/'\n\n    inputValueItems[valueIndex] = formattedValue\n\n    if (searchIsFocused) {\n      setSearchIsFocused(false)\n    }\n\n    if (inputValueItems.join('/') !== inputValue) {\n      setInputValue(inputValueItems.join('/'))\n      input.onChange(`${selectValue.id}${inputValueItems.join('/')}`)\n      onChange && onChange(selectValue.id, inputValueItems.join('/'))\n    }\n\n    setShowSuggestionList(false)\n    inputRef.current.focus()\n    setDropdownStyle({\n      left: `${inputRef.current.selectionStart < 30 ? inputRef.current.selectionStart : 30}ch`\n    })\n  }\n\n  const inputOnFocus = () => {\n    onFocus && onFocus()\n    input.onFocus(new Event('focus'))\n\n    if (showSelectDropdown) {\n      setShowSelectDropdown(false)\n    }\n\n    setShowSuggestionList(true)\n  }\n\n  const suggestionListSearchChange = event => {\n    event.persist()\n    setDropdownList(() =>\n      suggestionList.filter(option => {\n        return option.id.startsWith(event.target.value)\n      })\n    )\n  }\n\n  const toggleSelect = useCallback(() => {\n    if (showSelectDropdown) {\n      setShowSelectDropdown(false)\n      input.onBlur(new Event('blur'))\n      onBlur && onBlur(input.value)\n    } else {\n      setShowSuggestionList(false)\n      setShowValidationRules(false)\n      setDropdownStyle({\n        left: '0px'\n      })\n      setShowSelectDropdown(true)\n      input.onFocus(new Event('focus'))\n      onFocus && onFocus(input.value)\n    }\n  }, [input, onBlur, onFocus, showSelectDropdown])\n\n  const validateField = (value = '', allValues) => {\n    const valueToValidate = value.startsWith(selectValue.id)\n      ? value.substring(selectValue.id.length)\n      : (value ?? '')\n    let validationError = null\n\n    if (!isEmpty(validationRules)) {\n      const [newRules, isValidField] = checkPatternsValidity(rules, valueToValidate)\n      const invalidRules = newRules.filter(rule => !rule.isValid)\n\n      if (!isValidField) {\n        validationError = invalidRules.map(rule => ({ name: rule.name, label: rule.label }))\n      }\n    }\n\n    if (isEmpty(validationError)) {\n      if (valueToValidate.startsWith(' ')) {\n        validationError = { name: 'empty', label: invalidText }\n      } else if (required && valueToValidate.trim().length === 0) {\n        validationError = { name: 'required', label: 'This field is required' }\n      }\n    }\n\n    if (!validationError && validator) {\n      validationError = validator(value, allValues)\n    }\n\n    return validationError\n  }\n\n  const warningIconClick = () => {\n    setShowValidationRules(state => !state)\n    setShowSelectDropdown(false)\n  }\n\n  const comboboxClassNames = classnames(\n    comboboxClassName,\n    'form-field-combobox',\n    'form-field',\n    isInvalid && 'form-field-combobox_invalid'\n  )\n  const iconClassNames = classnames(\n    showSelectDropdown && 'form-field-combobox__icon_open',\n    'form-field-combobox__icon'\n  )\n  const selectValueClassNames = classnames(selectValue.className)\n\n  const wrapperClassNames = classnames(\n    'form-field__wrapper',\n    `form-field__wrapper-${density}`,\n    disabled && 'form-field__wrapper-disabled',\n    isInvalid && 'form-field__wrapper-invalid',\n    withoutBorder && 'without-border'\n  )\n\n  return (\n    <Field name={name} validate={validateField}>\n      {({ input, meta }) => (\n        <div\n          className={comboboxClassNames}\n          ref={comboboxRef}\n          data-testid={name ? `${name}-form-combobox` : 'form-combobox'}\n        >\n          {label && (\n            <div className={labelClassNames}>\n              <label data-testid=\"label\" htmlFor={input.name}>\n                {label}\n                {(required || validationRules.find(rule => rule.name === 'required')) && (\n                  <span className=\"form-field__label-mandatory\"> *</span>\n                )}\n              </label>\n            </div>\n          )}\n          <div className={wrapperClassNames}>\n            <div className=\"form-field__icons\">\n              <Arrow className={iconClassNames} onClick={toggleSelect} />\n            </div>\n            <div className=\"form-field-combobox__select form-field__control\" ref={selectRef}>\n              <div className=\"form-field-combobox__select-header\" onClick={toggleSelect}>\n                <span className={selectValueClassNames}>{selectValue.id}</span>\n                {selectValue.id.length === 0 && selectPlaceholder && (\n                  <div className=\"form-field-combobox__placeholder\">\n                    <label>{selectPlaceholder}</label>\n                  </div>\n                )}\n              </div>\n              {showSelectDropdown && (\n                <PopUpDialog\n                  headerIsHidden\n                  customPosition={{\n                    element: selectRef,\n                    position: 'bottom-right'\n                  }}\n                  className=\"form-field-combobox__dropdown form-field-combobox__dropdown-select\"\n                >\n                  <ul className=\"form-field-combobox__dropdown-list\">\n                    {selectOptions.map(option => {\n                      if (!option.hidden) {\n                        const selectOptionClassNames = classnames(\n                          'form-field-combobox__dropdown-list-option',\n                          option.className\n                        )\n\n                        return (\n                          <li\n                            className={selectOptionClassNames}\n                            key={option.id}\n                            onClick={() => handleSelectOptionClick(option)}\n                          >\n                            {option.label}\n                          </li>\n                        )\n                      }\n                    })}\n                  </ul>\n                </PopUpDialog>\n              )}\n            </div>\n            <input\n              className={inputClassNames}\n              data-testid={name ? `${name}-form-combobox-input` : 'form-combobox-input'}\n              id={input.name}\n              onChange={handleInputChange}\n              onFocus={inputOnFocus}\n              placeholder={inputPlaceholder}\n              ref={inputRef}\n              required={required}\n              type=\"text\"\n              value={inputValue}\n            />\n            {showSuggestionList && (dropdownList.length > 0 || searchIsFocused) && (\n              <PopUpDialog\n                headerIsHidden\n                customPosition={{\n                  element: selectRef,\n                  position: 'bottom-right'\n                }}\n                className=\"form-field-combobox__dropdown form-field-combobox__dropdown-suggestions\"\n                style={{\n                  ...dropdownStyle\n                }}\n              >\n                <div ref={suggestionListRef}>\n                  {!hideSearchInput && (\n                    <div className=\"form-field-combobox__search-wrapper\">\n                      <input\n                        data-testid={name ? `${name}-form-combobox-search` : 'form-combobox-search'}\n                        className=\"form-field-combobox__search form-field__control\"\n                        onChange={suggestionListSearchChange}\n                        onFocus={() => setSearchIsFocused(true)}\n                        placeholder=\"Type to search\"\n                        type=\"text\"\n                      />\n                      <SearchIcon />\n                    </div>\n                  )}\n                  <ul className=\"form-field-combobox__dropdown-list\">\n                    {searchIsFocused && dropdownList.length === 0 ? (\n                      <li className=\"form-field-combobox__dropdown-list-option\" key=\"no data\">\n                        No data\n                      </li>\n                    ) : (\n                      dropdownList.map(value => (\n                        <li\n                          className=\"form-field-combobox__dropdown-list-option\"\n                          key={value.id}\n                          onClick={() => handleSuggestionListOptionClick(value)}\n                        >\n                          {value.label}\n                        </li>\n                      ))\n                    )}\n                  </ul>\n                </div>\n              </PopUpDialog>\n            )}\n            <div className=\"form-field__icons\">\n              {isInvalid && !Array.isArray(meta.error) && (\n                <Tooltip\n                  className=\"form-field__warning\"\n                  template={<TextTooltipTemplate text={meta.error?.label ?? invalidText} warning />}\n                >\n                  <ExclamationMarkIcon />\n                </Tooltip>\n              )}\n              {isInvalid && Array.isArray(meta.error) && (\n                <button className=\"form-field__warning\" onClick={warningIconClick}>\n                  <WarningIcon />\n                </button>\n              )}\n            </div>\n            {!isEmpty(validationRules) && (\n              <OptionsMenu show={showValidationRules} ref={comboboxRef}>\n                {getValidationRules()}\n              </OptionsMenu>\n            )}\n          </div>\n        </div>\n      )}\n    </Field>\n  )\n}\n\nFormCombobox.propTypes = {\n  comboboxClassName: PropTypes.string,\n  density: PropTypes.oneOf(['dense', 'normal', 'medium', 'chunky']),\n  disabled: PropTypes.bool,\n  hideSearchInput: PropTypes.bool,\n  inputDefaultValue: PropTypes.string,\n  inputPlaceholder: PropTypes.string,\n  invalidText: PropTypes.string,\n  label: PropTypes.string,\n  maxSuggestedMatches: PropTypes.number,\n  name: PropTypes.string.isRequired,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  required: PropTypes.bool,\n  rules: PropTypes.array,\n  selectDefaultValue: PropTypes.shape({}),\n  selectOptions: COMBOBOX_SELECT_OPTIONS.isRequired,\n  selectPlaceholder: PropTypes.string,\n  suggestionList: COMBOBOX_SUGGESTION_LIST,\n  validator: PropTypes.func,\n  withoutBorder: PropTypes.bool\n}\n\nexport default FormCombobox\n"],"names":["label","name","this","jsxDEV","input","meta","Arrow","SearchIcon","ExclamationMarkIcon","WarningIcon"],"mappings":"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"}