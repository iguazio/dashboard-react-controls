{"version":3,"file":"useFormTable.hook.mjs","sources":["../../src/lib/hooks/useFormTable.hook.js"],"sourcesContent":["/*\nCopyright 2019 Iguazio Systems Ltd.\n\nLicensed under the Apache License, Version 2.0 (the \"License\") with\nan addition restriction as set forth herein. You may not use this\nfile except in compliance with the License. You may obtain a copy of\nthe License at http://www.apache.org/licenses/LICENSE-2.0.\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing\npermissions and limitations under the License.\n\nIn addition, you may not use the software for any purposes that are\nillegal under applicable law, and the grant of the foregoing license\nunder the Apache 2.0 license is conditioned upon your compliance with\nsuch restriction.\n*/\nimport { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport { get, omit } from 'lodash'\nimport { ARRAY_ERROR } from 'final-form'\n\nexport const useFormTable = (formState, exitEditModeTriggerItem, onExitEditModeCallback) => {\n  // `editingItem` should contain the `data` object with all fields that are used in the `formState`.\n  // Properties that aren't used in the `formState` should be placed directly in the `editingItem` object\n  // `editingItem` also has an `ui` property which is used internally in this hook\n  //\n  // e.g.\n  // editingItem = {\n  //   data: {\n  //     <fieldName>: <fieldValue>,\n  //     <fieldName2>: <fieldValue2>\n  //   },\n  //   <anotherProperty>: <anotherPropertyValue>\n  //   ui: {\n  //     isNew: <true|false>, // `true` if we are creating a new row, if we are editing it's `false`\n  //     fieldsPath: <\"the.path\">, // the path where table data is placed in the `formState`\n  //     index: <0|1|...> // index of the editing row\n  //   }\n  // }\n  const [editingItem, setEditingItem] = useState(null)\n  const editingItemRef = useRef(null)\n  const editingItemErrorsRef = useRef(null)\n  const formStateRef = useRef(null)\n  const bottomScrollRef = useRef(null)\n  const onExitEditModeCallbackRef = useRef(onExitEditModeCallback)\n\n  useLayoutEffect(() => {\n    const tableErrors = get(formState?.errors, editingItem?.ui.fieldsPath, [])\n    editingItemErrorsRef.current = get(tableErrors, editingItem?.ui.index, null)\n  }, [editingItem?.ui.fieldsPath, editingItem?.ui.index, formState?.errors])\n\n  useLayoutEffect(() => {\n    formStateRef.current = formState\n  }, [formState])\n\n  useLayoutEffect(() => {\n    onExitEditModeCallbackRef.current = onExitEditModeCallback\n  }, [onExitEditModeCallback])\n\n  const exitEditMode = () => {\n    if (editingItemRef.current?.data) {\n      Object.entries(editingItemRef.current?.data).forEach(([fieldName]) => {\n        formStateRef.current?.form.mutators.setFieldState(\n          `${editingItemRef.current?.ui.fieldsPath}[${editingItemRef.current?.ui.index}].data.${fieldName}`,\n          {\n            modified: false\n          }\n        )\n      })\n    }\n\n    editingItemRef.current = null\n    setEditingItem(null)\n    onExitEditModeCallbackRef?.current && onExitEditModeCallbackRef.current()\n  }\n\n  useEffect(() => {\n    const applyOrDiscardOrDeleteInEffect = () => {\n      if (editingItemRef?.current) {\n        if (!editingItemErrorsRef.current) {\n          exitEditMode()\n        } else {\n          if (editingItemRef.current?.ui?.isNew) {\n            const values = get(formStateRef.current.values, editingItemRef.current?.ui.fieldsPath)\n\n            if (values?.length > 1) {\n              formStateRef.current.form.mutators.remove(\n                editingItemRef.current?.ui.fieldsPath,\n                editingItemRef.current?.ui.index\n              )\n            } else {\n              formStateRef.current.form.change(editingItemRef.current?.ui.fieldsPath, [])\n            }\n          } else {\n            formStateRef.current.form.mutators.update(\n              editingItemRef.current?.ui.fieldsPath,\n              editingItemRef.current?.ui.index,\n              omit(editingItemRef.current, ['ui'])\n            )\n          }\n\n          exitEditMode()\n        }\n      }\n    }\n\n    return () => {\n      applyOrDiscardOrDeleteInEffect()\n    }\n  }, [exitEditModeTriggerItem])\n\n  const addNewRow = (event, fields, fieldsPath, newItem) => {\n    applyOrDiscardOrDelete(event)\n    formStateRef.current.form.mutators.push(fieldsPath, newItem)\n    setEditingItem(() => {\n      const newEditingItem = {\n        ...newItem,\n        ui: {\n          isNew: true,\n          fieldsPath,\n          index: fields.value?.length || 0\n        }\n      }\n      editingItemRef.current = newEditingItem\n\n      return newEditingItem\n    })\n\n    scrollIntoView()\n  }\n\n  const applyChanges = (event, index) => {\n    if (editingItemRef.current) {\n      if (!editingItemErrorsRef.current) {\n        if (editingItemRef.current?.ui.isNew) {\n          scrollIntoView()\n        }\n\n        exitEditMode()\n      } else {\n        // Mark all empty fields as `modified` in order to highlight the error if the field is invalid\n        Object.entries(editingItemErrorsRef.current?.data).forEach(([fieldName]) => {\n          formStateRef.current?.form.mutators.setFieldState(\n            `${editingItemRef.current?.ui.fieldsPath}[${index}].data.${fieldName}`,\n            {\n              modified: true\n            }\n          )\n        })\n      }\n    }\n  }\n\n  const deleteRow = (event, fieldsPath, index) => {\n    if (editingItemRef.current && index !== editingItemRef.current.ui.index) {\n      applyOrDiscardOrDelete(event)\n    }\n\n    const values = get(formStateRef.current.values, fieldsPath)\n\n    if (values?.length > 1) {\n      formStateRef.current.form.mutators.remove(fieldsPath, index)\n    } else {\n      formStateRef.current.form.change(fieldsPath, [])\n    }\n\n    exitEditMode()\n    event && event.stopPropagation()\n  }\n\n  const discardChanges = (event, fieldsPath, index) => {\n    formStateRef.current.form.mutators.update(\n      fieldsPath,\n      index,\n      omit(editingItemRef.current, ['ui'])\n    )\n    exitEditMode()\n    event && event.stopPropagation()\n  }\n\n  const discardOrDelete = (event, fieldsPath, index) => {\n    if (!editingItemRef.current || editingItemRef.current?.ui?.isNew) {\n      deleteRow(event, fieldsPath, index)\n    } else {\n      discardChanges(event, fieldsPath, index)\n    }\n  }\n\n  const applyOrDiscardOrDelete = (event = null) => {\n    if (editingItemRef?.current) {\n      if (!editingItemErrorsRef.current) {\n        applyChanges(event, editingItemRef.current?.ui.index)\n      } else {\n        discardOrDelete(\n          event,\n          editingItemRef.current?.ui.fieldsPath,\n          editingItemRef.current?.ui.index\n        )\n      }\n    }\n  }\n\n  const enterEditMode = (event, fields, fieldsPath, index) => {\n    applyOrDiscardOrDelete(event)\n\n    setTimeout(() => {\n      const editItem = fields.value[index]\n\n      setEditingItem(() => {\n        const newEditingItem = { ...editItem, ui: { fieldsPath, index } }\n        editingItemRef.current = newEditingItem\n\n        return newEditingItem\n      })\n    })\n  }\n\n  const scrollIntoView = () => {\n    if (bottomScrollRef.current) {\n      setTimeout(() => {\n        bottomScrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'nearest' })\n      })\n    }\n  }\n\n  const isCurrentRowEditing = rowPath => {\n    return (\n      editingItemRef?.current &&\n      `${editingItemRef.current.ui.fieldsPath}[${editingItemRef.current.ui.index}]` === rowPath\n    )\n  }\n\n  const getTableArrayErrors = fieldsPath => {\n    if (formState.submitFailed && formState.invalid) {\n      return get(formState, `errors.${fieldsPath}.${ARRAY_ERROR}`, [])\n    } else {\n      return []\n    }\n  }\n\n  return {\n    addNewRow,\n    applyChanges,\n    applyOrDiscardOrDelete,\n    bottomScrollRef,\n    deleteRow,\n    discardChanges,\n    discardOrDelete,\n    editingItem,\n    editingItemRef,\n    enterEditMode,\n    exitEditMode,\n    getTableArrayErrors,\n    isCurrentRowEditing\n  }\n}\n"],"names":["_a","_b"],"mappings":"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"}